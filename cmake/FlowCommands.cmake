function(add_flow_target)
  set(options EXECUTABLE STATIC_LIBRARY
    DYNAMIC_LIBRARY)
  set(oneValueArgs NAME)
  set(multiValueArgs SRCS DISABLE_ACTOR_WITHOUT_WAIT_WARNING)
  cmake_parse_arguments(AFT "${options}" "${oneValueArgs}" "${multiValueArgs}" "${ARGN}")
  if(NOT AFT_NAME)
    message(ERROR "add_flow_target requires option NAME")
  endif()
  if(NOT AFT_SRCS)
    message(ERROR "No sources provided")
  endif()
  foreach(src IN LISTS AFT_SRCS AFT_DISABLE_ACTOR_WITHOUT_WAIT_WARNING)
    if(${src} MATCHES ".*\\.actor\\.(h|cpp)")
      list(APPEND actors ${src})
    if(${src} MATCHES ".*\\.h")
        string(REPLACE ".actor.h" ".actor.g.h" generated ${src})
      else()
        string(REPLACE ".actor.cpp" ".actor.g.cpp" generated ${src})
      endif()
      set(actor_compiler_flags "")
      foreach(s IN LISTS AFT_DISABLE_ACTOR_WITHOUT_WAIT_WARNING)
        if("${s}" STREQUAL "${src}")
          set(actor_compiler_flags "--disable-actor-without-wait-warning")
          break()
        endif()
      endforeach()
      list(APPEND sources ${generated})
      list(APPEND generated_files ${CMAKE_CURRENT_BINARY_DIR}/${generated})
      if(WIN32)
        add_custom_command(OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${generated}"
          COMMAND $<TARGET_FILE:actorcompiler> "${CMAKE_CURRENT_SOURCE_DIR}/${src}" "${CMAKE_CURRENT_BINARY_DIR}/${generated}" ${actor_compiler_flags} ${actor_compiler_flags}
          DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/${src}" actorcompiler
          COMMENT "Compile actor: ${src}")
      else()
        add_custom_command(OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${generated}"
          COMMAND ${MONO_EXECUTABLE} ${actor_exe} "${CMAKE_CURRENT_SOURCE_DIR}/${src}" "${CMAKE_CURRENT_BINARY_DIR}/${generated}" ${actor_compiler_flags} ${actor_compiler_flags} > /dev/null
          DEPENDS "${CMAKE_CURRENT_SOURCE_DIR}/${src}" actorcompiler
          COMMENT "Compile actor: ${src}")
      endif()
    else()
      list(APPEND sources ${src})
    endif()
  endforeach()
  if(AFT_EXECUTABLE)
    set(target_type exec)
    add_executable(${AFT_NAME} ${sources})
  endif()
  if(AFT_STATIC_LIBRARY)
    if(target_type)
      message(FATAL_ERROR "add_flow_target can only be of one type")
    endif()
    add_library(${AFT_NAME} STATIC ${sources})
  endif()
  if(AFT_DYNAMIC_LIBRARY)
    if(target_type)
      message(FATAL_ERROR "add_flow_target can only be of one type")
    endif()
    add_library(${AFT_NAME} DYNAMIC ${sources})
  endif()
  if(AFT_OBJECT_LIBRARY)
    if(target_type)
      message(FATAL_ERROR "add_flow_target can only be of one type")
    endif()
    add_library(${AFT_NAME} OBJECT ${sources})
  endif()

  add_custom_target(${AFT_NAME}_actors DEPENDS ${generated_files})
  add_dependencies(${AFT_NAME} ${AFT_NAME}_actors)
  target_include_directories(${AFT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
endfunction()
