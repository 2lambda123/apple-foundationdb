load('//:fdb.bzl', 'fdb_utility_library')

fdb_utility_library(
    name = "headers",
    hdrs = [
        "FDBTypes.h",
        "Knobs.h",
        "json_spirit/json_spirit_error_position.h",
        "json_spirit/json_spirit_reader_template.h",
        "json_spirit/json_spirit_value.h",
        "json_spirit/json_spirit_writer_options.h",
        "json_spirit/json_spirit_writer_template.h",
    ],
)

fdb_utility_library(
    name = "libfdbclient",
    hdrs = [
        "BackupAgent.h",
        "NativeAPI.h",
        "MasterProxyInterface.h",
        "StorageServerInterface.h",
    ],
    srcs = [
        "Atomic.h",
        "BackupContainer.h",
        "ClientDBInfo.h",
        "ClientLogEvents.h",
        "ClientWorkerInterface.h",
        "ClusterInterface.h",
        "CommitTransaction.h",
        "CoordinationInterface.h",
        "DatabaseConfiguration.h",
        "DatabaseContext.h",
        "EventTypes.actor.h",
        "FailureMonitorClient.h",
        "FDBOptions.g.h",
        "FDBOptions.h",
        "IClientApi.h",
        "JsonBuilder.h",
        "KeyBackedTypes.h",
        "KeyRangeMap.h",
        "ManagementAPI.h",
        "MetricLogger.h",
        "MonitorLeader.h",
        "MultiVersionAssignmentVars.h",
        "MultiVersionTransaction.h",
        "MutationList.h",
        "Notified.h",
        "ReadYourWrites.h",
        "RunTransaction.actor.h",
        "RYWIterator.h",
        "Schemas.h",
        "SnapshotCache.h",
        "StatusClient.h",
        "Status.h",
        "Subspace.h",
        "SystemData.h",
        "TaskBucket.h",
        "ThreadSafeTransaction.h",
        "Tuple.h",
        "VersionedMap.actor.h",
        "VersionedMap.h",
        "WriteMap.h",

        "AutoPublicAddress.cpp",
        "BackupAgentBase.actor.cpp",
        "BackupContainer.actor.cpp",
        "DatabaseBackupAgent.actor.cpp",
        "DatabaseConfiguration.cpp",
        "FailureMonitorClient.actor.cpp",
        "FDBOptions.g.cpp",
        "FileBackupAgent.actor.cpp",
        "JsonBuilder.cpp",
        "KeyRangeMap.actor.cpp",
        "Knobs.cpp",
        "ManagementAPI.actor.cpp",
        "MetricLogger.actor.cpp",
        "MonitorLeader.actor.cpp",
        "MultiVersionTransaction.actor.cpp",
        "NativeAPI.actor.cpp",
        "ReadYourWrites.actor.cpp",
        "RYWIterator.cpp",
        "Schemas.cpp",
        "StatusClient.actor.cpp",
        "Subspace.cpp",
        "SystemData.cpp",
        "TaskBucket.actor.cpp",
        "ThreadSafeTransaction.actor.cpp",
        "Tuple.cpp",
    ],
    deps = [
        "//flow:libflow",
        "//:headers",
        "//fdbrpc:headers",
        "//fdbrpc:libfdbrpc",
        "//fdbrpc/md5:md5",
        "//fdbrpc/libb64:libb64",
        "//fdbclient:headers",
    ],
)

genrule(
    name = "FDBOptions.g",
    srcs = [
        "//fdbclient/vexillographer:options",
        "FDBOptions.h",
    ],
    outs = [
        "FDBOptions.g.h",
        "FDBOptions.g.cpp",
    ],
    cmd = "mono $(location //fdbclient/vexillographer:vexillographer) $(location //fdbclient/vexillographer:options) cpp $$(dirname $(location :FDBOptions.g.h))/FDBOptions.g",
    tools = ["//fdbclient/vexillographer:vexillographer"],
)
